;-*-Doctest-*-
=================================================
GenericSetup Exmport/Import Handlers for Policies
=================================================

Placeful workflow policies can be imported and exported through
portal_setup.

Import
------

Start with no policies::

    >>> from Products.CMFCore.utils import getToolByName
    >>> ppw = getToolByName(self.portal, 'portal_placeful_workflow')
    >>> ppw.getWorkflowPolicyIds()
    ()

Import the portal_placeful_workflow step with a profile defining a
policy::

    >>> ps = getToolByName(self.portal, 'portal_setup')
    >>> setup_context = 'profile-Products.CMFPlacefulWorkflow.tests:exportimport'
    >>> ps.setImportContext(setup_context)
    >>> ps.runImportStepFromProfile('portal_placeful_workflow')
    {'messages': {'portal_placeful_workflow': 'placeful_workflow: Folder
    imported.\nplaceful_workflow: Workflow tool imported.', u'workflow': ''},
    'steps': [u'workflow', 'portal_placeful_workflow']}

    >>> ppw.getWorkflowPolicyIds()
    ('baz_policy',)

In this policy, plone_workflow is the default chain::

    >>> policy = ppw.getWorkflowPolicyById('baz_policy')
    >>> policy.getDefaultChain(None)
    ('folder_workflow',)

Anything not specified in the policy, should get the policy default::

    >>> policy.getChainFor('Image')
    ('folder_workflow',)

In this policy, Folder is bound to plone_workflow::

    >>> policy.getChainFor('Folder')
    ('plone_workflow',)

The chain for Document should acquire from portal_workflow, so the
policy returns None::

    >>> policy.getChainFor('Document')

The chains for Event and File should be empty::

    >>> policy.getChainFor('Event')
    ()
    >>> policy.getChainFor('File')
    ()

Export
------

Export the portal_placeful_workflow step::

    >>> tarball = ps.runImportStepFromProfile('portal_placeful_workflow')['tarball']

The export produces a file for the tool itself::

    >>> import tarfile, StringIO
    >>> archive = tarfile.open(
    ...     name='export',
    ...     fileobj=StringIO.StringIO(tarball))

    >>> print archive.extractfile(
    ...     'portal_placeful_workflow.xml').read()
    <?xml version="1.0"?>
    <object name="portal_placeful_workflow" meta_type="Placeful Workflow Tool">
     <property name="title"></property>
     <property name="max_chain_length" type="int">1</property>
     <object name="baz_policy" meta_type="WorkflowPolicy"/>
    </object>

The export also produces a file for any policies::

    >>> print archive.extractfile('portal_placeful_workflow/baz_policy.xml').read()
    <?xml version="1.0"?>
    <object name="baz_policy" meta_type="WorkflowPolicy">
     <property name="title">Baz Policy</property>
     <bindings>
      <default>
       <bound-workflow workflow_id="folder_workflow"/>
      </default>
      <type acquire="True" type_id="Document"/>
      <type type_id="Event"/>
      <type type_id="File"/>
      <type type_id="Folder">
       <bound-workflow workflow_id="plone_workflow"/>
      </type>
     </bindings>
    </object>

Export works when chains are left unset to acquire::

    >>> policy._default_chain = None
    >>> policy._chains_by_type = None
    >>> ignored = ps.runImportStepFromProfile('portal_placeful_workflow')
